version: "3"

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data/postgres
    restart: unless-stopped
    expose:
      - "5432"
    networks: 
      - auth

  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    entrypoint: [
      "migrate", "-path", "/migrations", "-database",
      "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable", "up"
    ]
    restart: on-failure
    depends_on:
      - postgres
    networks:
      - auth

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks: 
      - auth

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - ACCESS_EXP_TIME=${ACCESS_EXP_TIME}
      - REFRESH_EXP_TIME=${REFRESH_EXP_TIME}
      - SERVER_HOST=${SERVER_HOST}
      - SERVER_PORT=${SERVER_PORT}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - API_PREFIX=${API_PREFIX}
      - LOG_LEVEL=${LOG_LEVEL}
    depends_on:
      - migrate
    ports:
      - 3000:${SERVER_PORT}
    networks: 
      - auth

networks:
  auth:
    driver: bridge
